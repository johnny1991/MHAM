<html>
    <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    {% block stylesheets %}
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/manager/css/style.css') }}">
    {% endblock %}
        <script src="{{ asset('bundles/manager/js/jquery-1.11.0.min.js') }}"></script>
        <title>Manager HA</title>
    </head>
    <body>
        <div class="container">
            <div class="row header">
                <div class="col-sm-12">
                    <h1>Gestionnaire de Haute Disponibilité</h1>
                </div>
            </div>
            <div class="row main">
                <div class="col-sm-12">
                	<div class="row">
                		<div class="col-sm-12">
		                    <div id="bdd_state">
		                        <h2>État des Clusters SQL</h2>
		                        <table class="table table-striped table-hover">
		                            <thead>
		                            	<tr>
		                            		<th></th>
		                            		<th colspan="2">Serveur</th>
				                            <th colspan="8">BDD</th>
				                     	</tr>
		                            	<tr>
		                            		<th>#</th>
		                            		<th>IP du serveur</th>
		                            		<th>Status de Mysql</th>
				                            <th>Status de réplication</th>
				                            <th>Log Binaire</th>
				                            <th>Position Binaire</th>
				                            <th>Slave IO Running</th>
				                            <th>Slave SQL Running</th>
							    			<th>Read Only</th>
				                            <th>Relay Purge</th>
				                            <th>Action</th>
				                     	</tr>
				                 	</thead>
		                        	<tbody>
			                        	{% for server in manager.bddServers %}
			                            <tr>
			                              	<td>{{ loop.index }}</td>
			                                <td><b>{{ server.ip }}</b></td>
			                                <td>
				                                {% if server.mysql.status == 1 %}
				                                	<span class="ok">Up</span>
				                                {% else %}
				                                	<span class="nok">Down</span> 
				                                {% endif %}
			                                </td>
			                              	{% if server.mysql.status %}
			                                	<td>{{ server.mysql.state }}</td>
				                                {% if(server.mysql.state == 'Master') %}
													<td>{{ server.mysql.replicationStatus['File'] }}</td>
				                                	<td>{{ server.mysql.replicationStatus['Position'] }}</td>
				                                	<td></td>
				                                	<td></td>
												{% elseif(server.mysql.state == 'Slave') %}
													<td>{{ server.mysql.replicationStatus['Master_Log_File'] }}</td>
			                                        <td>{{ server.mysql.replicationStatus['Read_Master_Log_Pos'] }}</td>
													<td alt="{{ server.mysql.replicationStatus['Last_IO_Error'] }}">
														{% if server.mysql.replicationStatus['Slave_IO_Running'] ==  'No' %}
															<span class="nok">{{ server.mysql.replicationStatus['Slave_IO_Running'] }}</span>
														{% else %}
															<span class="ok">{{ server.mysql.replicationStatus['Slave_IO_Running'] }}</span>
														{% endif %}
													</td>
													<td alt="{{ server.mysql.replicationStatus['Last_SQL_Error'] }}">
														{% if server.mysql.replicationStatus['Slave_SQL_Running'] ==  'No' %}
															<span class="nok">{{ server.mysql.replicationStatus['Slave_SQL_Running'] }}</span>
														{% else %}
															<span class="ok">{{ server.mysql.replicationStatus['Slave_SQL_Running'] }}</span>
														{% endif %}
													</td>
												{% endif %}
												<td>{{ server.mysql.global['read_only'] }}</td>
												<td>{{ server.mysql.global['relay_log_purge'] }}</td>
											{% else %}
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
											{% endif %}
											<td>
												{% if not manager.getServersDown %}
			                    					<button id="sync" class="btn btn-primary synchronisation" data-url="{{ path('manager_ha_sync',{'ip': server.ip } ) }}">Forcer en Master</button>
			                    				{% endif %}
			                    			</td>
									    </tr>
			                        	{% endfor %}
		                    		</tbody>
		                    	</table>
		                    	<div class="bs-callout bs-callout-info">
		                    		<h4>Comment ca marche ?</h4>
		                    		<p>Il faut <strong>2 serveurs</strong> pour réaliser un cluster SQL. L'un doit être en Master et l'autre en Esclave.<br>
		                    		Lorsque l'on écrit dans la base de données du serveur SQL Master, le serveur SQL Esclave reçoit l'information et écrit la même chose dans sa base de données. 
		                    		Pour cela, Mysql utilise les Logs Binaires.<br>
		                    		<strong>Pour avoir un bon fonctionnement, Les <em>Logs binaires</em> ainsi que la <em>Position binaire</em> doivent être les mêmes sur les 2 serveurs SQL.</strong><br>
		                    		</p>
		                    		<p><em>Slave IO Running</em> et <em>Slave SQL Running</em> indiquent que le serveur Esclave écoute bien le serveur SQL Master.<br>
		                    		<strong>Pour un bon fonctionnement, <em>Slave IO Running</em> et <em>Slave SQL Running</em> doivent être uniquement à <em>Yes</em> sur le serveur SQL Esclave.</strong><br>
		                    		Dans un idéal, le serveur SQL Esclave doit être en lecture seul (<em>Read Only</em> à <em>ON</em>) et le serveur SQL Maître doit avoir le <em>Relay purge</em> à <em>ON</em>.
		                    		</p>
		                    		<p>
		                    		<strong>Le bouton <em>Forcer en Master</em> permet de passer une base de données en master et l'autre en esclave. Attention avec cette commande !!!</strong>
		                    		</p>
		                    	</div>
		                    </div>
		            	</div>
		            </div>
		           	<div class="row">
		                <div class="col-sm-9">
		                    <div id="magento_state">
		                     	<h2>État des Clusters Magento</h2>
		                    	<table class="table table-striped table-hover">
		                            <thead>
		                            	<tr>
		                            		<th></th>
		                            		<th colspan="1">Magento</th>
		                            		<th colspan="4">Serveur</th>
				                     	</tr>
		                            	<tr>
		                            		<th>#</th>
		                            	    <th>Ip de la BDD</th>
		                            		<th>IP du serveur</th>
		                            		<th>Status du serveur</th>
		                            		<th>IP public</th>
		                            		<th>Action</th>
				                     	</tr>
				                 	</thead>
		                        	<tbody>
			                        	{% for server in manager.magentoServers %}
			                            <tr>
			                            	<td>{{ loop.index }}</td>
			               					<td>{{ server.BddIp }}</td>
			                                <td><b>{{ server.ip }}</b></td>
			                                <td>
			                                	{% if server.status == 1 %}
				                                	<span class="ok">Up</span>
				                                {% else %}
				                                	<span class="nok">Down</span> 
				                                {% endif %}
				                            </td>
				                            <td>
			                                {% if server.isMaster == 1 %}
				                                	{{ manager.getConfiguration.public_ip }}
				                                {% else %}
				                                	&nbsp; 
				                                {% endif %}
			                                </td>
			                                <td>
			                                	{% if server.isMaster != 1 %}
			                    					<button id="change_public_ip" class="btn btn-primary public_ip" data-url="{{ path('manager_ha_change_public_ip',{'ip': server.ip } ) }}">Ajouter l'IP public</button>
			                    				{% else %}
			                    					<button id="remove_public_ip" class="btn btn-warning public_ip" data-url="{{ path('manager_ha_remove_public_ip',{'ip': server.ip } ) }}">Retirer l'IP public</button>
			                    				{% endif %}
			                    			</td>
									    </tr>
			                        	{% endfor %}
		                    		</tbody>
		                    	</table>
		                    	<div class="magento_main_ip">
			                        IP public de Magento : <b>{{ manager.getConfiguration.public_ip }}</b>
		                        </div>
		                        {% if manager.isPublicIpLive %}
									<div class="magento_status bg-success">
			                            <span class="glyphicon glyphicon-ok"></span>
			                            <span>Le site web répond au ping</span>
			                        </div>
		                        {% else %}
			                        <div class="magento_status bg-danger">
			                            <span class="glyphicon glyphicon-remove"></span>
			                            <span>Le site web ne répond pas au ping</span>
			                        </div>
		                        {% endif %}
		                        <div class="bs-callout bs-callout-info">
		                    		<h4>Comment ca marche ?</h4>
		                    		<p>Les 2 clusters Magento (ou autre) sont reliés à une base de données via leurs fichiers de configuration.<br>
		                    		<strong>Pour un bon fonctionnnement, Il doivent être reliés à la même base de données, et cette base de données doit être la base de données Master.</strong><br>
		                    		</p>
		                    		<p>
		                    		<strong>Les 2 cluster doivent également être opérationnel (<em>Status</em> à <em>Up</em>).</strong><br>
		                    		Le cluster principal est celui qui possède l'IP public. Vous pouvez changer l'IP public de serveur en cliquant sur <em>Ajouter l'IP public</em>. <br>
		                    		Vous pouvez également retirer l'IP public du serveur.
		                    		</p>
		                    	</div>
		                    </div>
		               	</div>
		            	<div class="col-sm-3">
		            		<div class="server_state">
		            			<h2>Les Serveurs</h2>
			            		<table class="table table-striped table-hover">
			                        <thead>
			                        	<tr>
			                        		<th>{{ manager.getConfiguration.server_name[0] }}</th>
				                            <th>{{ manager.getConfiguration.server_name[1] }}</th>
				                     	</tr>
				                 	</thead>
			                    	<tbody>
			                    		<tr>
			                    			<td>{{ manager.getConfiguration.magento_ips[0] }}</td>
				                            <td>{{ manager.getConfiguration.magento_ips[1] }}</td>
			                    		</tr>
			                    		<tr>
			                    			<td>{{ manager.getConfiguration.bdd_ips[0] }}</td>
				                            <td>{{ manager.getConfiguration.bdd_ips[1] }}</td>
			                    		</tr>
			                    	</tbody>
			                    </table>
			               	</div>
		                </div>
		          	</div>
		          	<div class="row last">
		                <div class="col-sm-12">   
		                    <div id="mha_state">
		                        <h2>État du Manager MHA</h2>
								<div class="mha_main_ip">
			                        IP du Master : <b>{{ manager.mha.main_bdd_ip }}</b>
		                        </div>
								{% if manager.mha.isrunning %}
									<div class="mha_status bg-success">
			                            <span class="glyphicon glyphicon-ok"></span>
			                            <span>Le manager MHA est en cours d'éxecution</span>
			                        </div>
		                        {% else %}
			                        <div class="mha_status bg-danger">
			                            <span class="glyphicon glyphicon-remove"></span>
			                            <span>Le manager MHA n'est pas en cours d'éxecution</span>
			                        </div>
		                        {% endif %}
								<div class="log">
		                            En cours de chargement ...
		                        </div>
		                        <button id="restart_mha" class="btn btn-primary">Restart MHA</button>
		                        <button class="btn btn-primary" id="start_mha">Start MHA</button>
		                        <button class="btn btn-danger" id="stop_mha">Stop MHA</button>
		                        <div class="time">Date du Log : <span id="refresh_time"></span></div>
		                    </div>
		              	</div>
		           	</div>
		    	</div>
	            <div id="global_state">
	                <div id="feu_tricolore" class="
	                    {% if (manager.isMainBddServerOperational == 1) and (manager.mha.isOperational == 1) and (manager.isPublicIpLive == 1) %}
	                    	green
	                    {% elseif (manager.isMainBddServerOperational == 1) or (manager.mha.isOperational == 1) %}
	                    	orange
	                    {% else %}
	                    	red
	                    {% endif %}
	                    ">
	                </div>
	           	</div>
	            <script>
	                setInterval(function (){
	                    $('#mha_state .log').load("{{ path('manager_ha_log')}}").fadeIn("slow");
	                    $('#mha_state #refresh_time').html(new Date($.now()));
	                }, 1000);
	                $('#restart_mha').click(function(){
	                	jQuery.ajax({
	                		url: '{{ path('manager_ha_restart_mha') }}',
	                		success: function(s,x){
	                			setTimeout(function(){ 
	                				location.reload();
	                			 }, 4000);
	                		} 
	                	});
	                });
	                $('#start_mha').click(function(){
	                	jQuery.ajax({
	                		url: '{{ path('manager_ha_start_mha') }}',
	                		success: function(s,x){
	                			setTimeout(function(){ 
	                				location.reload();
	                			 }, 4000);
	                		} 
	                	});
	                });
	                $('#stop_mha').click(function(){
	                	jQuery.ajax({
	                		url: '{{ path('manager_ha_stop_mha') }}',
	                		success: function(s,x){
	                			setTimeout(function(){ 
	                				location.reload();
	                			 }, 4000);
	                		} 
	                	});
	                });
	                $('.synchronisation').click(function(){
	                	$('.load').show();
	                	jQuery.ajax({
	                		url: $(this).attr('data-url'),
	                		success: function(data,x){
	                			alert(data);
	                			location.reload();
	                			$('.load').hide();
	                		} 
	                	});
	                });
	                
	                $('.public_ip').click(function(){
	                	$('.load').show();
	                	jQuery.ajax({
	                		url: $(this).attr('data-url'),
	                		success: function(data,x){
	                			alert(data);
	                			setTimeout(function(){ 
	                				location.reload();
	                				$('.load').hide();
	                			 }, 8000);
	                		} 
	                	});
	                });
	            
	            </script>
			</div>
            <div class="row footer">
            	<div class="col-sm-6">
            		<img alt="Logo Auguria" src="{{ asset('bundles/manager/images/logo-auguria.png') }}" id="auguria_footer">
                </div>
                <div class="col-sm-6">
                    <span id="developped_by">Developped by Auguria - 2014</span>
                </div>
            </div>
        </div>
        <div class="load">
        <div class="loader"></div>
        </div>
    </body>
</html>
